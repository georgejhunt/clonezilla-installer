#!/bin/bash -x
# resize the last partition to minimum size and prepare for image genation by clonezilla
# assume last partition on device (not necessarily rootfs) is partition to be shrunk
# parameter 1 - output file name
# parameter 2 - device specifier of root partition ie. /dev/sdb1

# assumes that current directory is /mnt
# Automatically determine a size for the output disk image
# (including root, swap, and boot partitions).
#
# This is calculated by using resize2fs to shrink, then adding the space
# occupied by previous partitions
# Assumes root is last partition

if [ $# -lt 2 ]; then
   echo "Usage: $0 filename (no .img),root device (/dev/sda1)"
   exit 1
fi

# get the current settings
source factory-settings

PARTITION=$2

if [ ! -b $PARTITION ];then
   echo "Device $PARTITION not found".
   exit 1
fi

umount $PARTITION
umount /media/usb*

# setup to expand on boot
# assume expand service is installed

mkdir -p rootfs
mount $PARTITION rootfs
touch rootfs/.resize-rootfs

# create id for image
HASH=`cat rootfs/etc/xsce/image-hash`
YMD=`cat rootfs/etc/xsce/image-date`
FILENAME=$(printf "%s-%s-%s-%s-%s.img" $PRODUCT $VERSION $YMD $1 $HASH )
echo $FILENAME > rootfs/.xsce-image
echo $FILENAME > rootfs/etc/xsce/image-filename

# save this filename for later use
echo $FILENAME > image-filename
echo $HASH > image-hash

umount rootfs

# now resize the last partition -- probably /library -- can only resize last
DEVICE=${PARTITION:0:-1}
PART_DIGIT=`parted $DEVICE print | grep ext4 | cut -d' ' -f2 |tail -n1`
PARTITION=${DEVICE}${PART_DIGIT}

PART_START_SECTOR=`parted -sm  $DEVICE unit s print | cut -d: -f1,2|grep $PART_DIGIT:|cut -d: -f2`
root_start=${PART_START_SECTOR:0:-1}

# total prior sectors is 1 less than start of this one
prior_sectors=$(( root_start - 1 ))

# resize the last partition on the device
umount $PARTITION
e2fsck -fy $PARTITION
minsize=`resize2fs -P $PARTITION | cut -d" " -f7`
block4k=$(( minsize + 100000 )) # add 400MB OS claims 5% by default
resize2fs $PARTITION $block4k

umount $PARTITION
e2fsck -fy $PARTITION

# fetch the new size of ROOT PARTITION
blocks4k=`e2fsck -n $PARTITION 2>/dev/null|grep blocks|cut -f5 -d" "|cut -d/ -f2`

root_end=$(( (blocks4k * 8) + prior_sectors ))

umount $PARTITION
e2fsck -fy $PARTITION

umount $PARTITION

# resize root partition
parted -s $DEVICE rm $PART_DIGIT
parted -s $DEVICE unit s mkpart primary ext4 $root_start $root_end

umount $PARTITION
e2fsck -fy $PARTITION
# set the percentage reserved by OS to 1 percent
tune2fs -m 1 $PARTITION
 

# recalc last sector and read that many sectors from card
last_sector=`parted -s $DEVICE unit s print |tail -2 |head -1| awk '{print $3}'`
last=${last_sector:0:-1}
echo "last sector: $last"
